{% from "macros/render_field.jinja" import render_field %}


{% extends "layout.jinja" %}
{% block title %}{{ _('nav_configuration') }}{% endblock title %}


{% block style %}
<style>
    .select-box {
        border-radius: 5px;
        border: var(--bs-border-width) solid var(--bs-border-color);
        padding: 20px;
        height: 400px;
    }
</style>
{% endblock style %}


{% block nav %}
{% include "includes/navbar.jinja" %}
{% endblock nav %}


{% block content %}
<div class="row align-items-center" style="height: 100vh;">
    <div class="mx-auto col-10 col-md-8 col-lg-6">

        <div class="row mt-4">
            <div class="col-12 col-xl-8">
                <h1>{{ _('display_setting') }}</h1>
                <small class="form-text text-mute">
                    {{ _('display_setting_help') | safe }}
                </small>
            </div>
            <div class="col-12 col-xl-4 my-3 my-xl-auto text-end">
                <a href="{{ url_for('configuration.export') }}" class="btn btn-sm btn-info mx-1">
                    {{ _('export') }}
                </a>

                <div style="display: inline-block;" x-data>
                    <form method="POST" action="{{ url_for('configuration.import_') }}" enctype="multipart/form-data"
                        x-ref="importForm">
                        <input type="file" name="file" class="d-none" @upload.window="$el.click()"
                            @change="$event.target.form.submit()">
                        <button type="button" class="btn btn-sm btn-secondary mx-1" @click="$dispatch('upload')">
                            {{ _('import') }}
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <form method="post" autocomplete="off">
            {{ form.csrf_token }}

            <div class="form-group">
                {{ form.epd_brand.label(class="form-label") }}
                {{ form.epd_brand(class="form-select" + form_valid_class(form.epd_brand), **{
                "hx-ext": "path-params",
                "hx-get": url_for('configuration.epd_models', brand='{epd_brand}') | unquote,
                "hx-target": "select[name=epd_model]",
                "hx-trigger": "load, change"
                }) }}
                <div class="invalid-feedback">
                    {% for error in form.epd_brand.errors %}
                    <span>{{ error }}</span>
                    {% endfor %}
                </div>
            </div>

            <div class="form-group">
                {{ form.epd_model.label(class="form-label") }}
                {{ form.epd_model(class="form-select" + form_valid_class(form.epd_model)) }}

                <div>
                {{ form.epd_model.errors.__class__ }}
                </div>    
                <div class="invalid-feedback">
                    {% for error in form.epd_model.errors %}
                    <span>{{ error }}</span>
                    {% endfor %}
                </div>
            </div>

            <div class="form-group">
                {{ form.eta_locale.label(class="form-label") }}
                {{ form.eta_locale(class="form-select" + form_valid_class(form.eta_locale)) }}

                <div>
                {{ form.eta_locale.errors.__class__ }}
                </div>    
                <div class="invalid-feedback">
                    {% for error in form.eta_locale.errors %}
                    <span>{{ error }}</span>
                    {% endfor %}
                </div>
            </div>

            <div class="form-group text-end pt-3">
                {{ form.submit(class="btn btn-primary btn-customized") }}
            </div>
        </form>
    </div>
</div>

{% endblock content %}